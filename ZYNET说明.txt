ZYNET 是一款 服务器和客户端通信引擎, 客户端连接服务器后,会建立 客户端与客户端之间使用P2P TCP 连接,这样的话,在发群发数据包的时候,可以大量减少服务器的处理量,以及服务器带宽量,提示客户端与客户端之间的响应,提示体验效果.

问题1: 如果客户端与客户端建立P2P 连接失败怎么办?
在一些NAT 策略中,确实有几种不支持 TCP P2P的,这个时候,客户端发送给数据包给其他客户端,会通过服务器中转.从而自动切换成原来的 C-S-C模式,在代码函数上,完全不需要另外处理,因为
内部已经实现了自动处理方式.

问题2: 这块网络通信引擎和原来的ZYSOCKET 使用起来 会更复杂吗?或者说差异在哪里?
差异是有的,主要是 inputData,也就是 数据包输入的时候. 参数与原先的 稍微有点不同.我写了2款DEMO,你可以从中看到差异,以及处理方式!另外要说的是,这款通信引擎内部集成了 RingStreamPool 所以,inputData输入的 byte[] data,都是整合过的,也就是完整的.不需要你额外定义RingStreamPool来处理数据包了.至于代码复杂程度,已经结构,和ZYSOCKET 没什么区别
唯一不同是 CLIENT吧,Client比原先的使用起来要方便很多.


问题3: Client与Client断开连接 需要额外处理吗? Client和Server的数据包 需要分开处理吗?
这个看个人功能了,一般不需要额外处理,如果需要额外处理,框架里面提供了事件调用.注册一下就可以了!关于后面的问题.
Client的数据包输入接口和Server数据包输入接口封装在了一块,区别只在于参数 Id,如果Id=0就是服务器发送过来的数据包,
其他就是其他的客户端给你发送的!此ID 是服务器分配的 客户端无法冒充!

问题4:性能方面如何?
内部基于ZYSOCKET的,唯一的区别就是在 你需要发送的数据包上 再封装了一层. 所以性能差异也就是仅此而已!

问题5:关于稳定性如何?
因为是刚写的代码,稳定性已经BUG有待进一步的实践! 不过我一向都是开源的.如果你发现BUG有能力修复的话,可以自己修复,没有能力修复的话,可以告诉我!

问题6:关于适用范围?
一般来说需要如此实时通信的是对行业要求比较高的软件,比如游戏,数据传送服务等. 具体使用情况,只能看大家需求来分析后才能下定论.

问题7:支持什么平台?
服务器是死的了,只支持.NET 平台(.net fromwork4.5 Mono),客户端的话目前也只能支持这些.(.net fromwork4.5 unity Xamarin) 如果想要其他语言支持的话,需要重写客户端! 客户端代码逻辑并不复杂,数据结构使用的 protobuf.应该是易于扩展的.